{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAOC,SAASC,cAAc,SAChCC,EAAkB,KAClBC,EAAiB,KACjBC,EAAc,KAElB,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAS,SAACC,EAASC,GAC5BC,YAAW,WACaC,KAAKC,SAAW,GAExCJ,EAAQ,CAACH,WAAUC,UAEnBG,EAAO,CAACJ,WAAUC,S,GAEfA,E,IAyCPR,EAAKe,iBAAiB,UApCD,SAACC,GACpBA,EAAMC,iBAEFD,EAAME,OAAOC,QAIjB,IAEuBC,EAAnBJ,EAAMK,cADRC,SAAWC,EAAKH,EAALZ,MAAOgB,EAAIJ,EAAJI,KAAMC,EAAML,EAANK,OAO1B,GAJAtB,EAAkBuB,OAAOH,EAAMI,OAC/BvB,EAAiBsB,OAAOF,EAAKG,OAC7BtB,EAAcqB,OAAOD,EAAOE,OAExBxB,EAAkB,GAAKC,EAAiB,GAAKC,GAAe,EAC9DP,EAAA8B,OAAOC,QAAS,sCADlB,CAKA,IAAK,IAAIC,EAAI,EAAGA,EAAIzB,EAAayB,IAC/BxB,EAAcwB,EAAG3B,GAChB4B,MAAK,SAAAC,G,IAAGzB,EAAQyB,EAARzB,SAAUC,EAAKwB,EAALxB,MACjBV,EAAA8B,OAAOK,QAAQ,uBAAwCC,OAAf3B,EAAS,QAAY2B,OAAN1B,EAAM,M,IAE9D2B,OAAM,SAAAH,G,IAAGzB,EAAQyB,EAARzB,SAAUC,EAAKwB,EAALxB,MAClBV,EAAA8B,OAAOC,QAAQ,sBAAqCK,OAAf3B,EAAS,QAAY2B,OAAN1B,EAAM,M,IAG3DL,GAAmBC,EAGpBY,EAAMK,cAAce,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix, { Notify } from 'notiflix';\n\nconst form = document.querySelector('.form');\nlet firstDaleyInput = null;\nlet daleyStepInput = null;\nlet amountInput = null;\n\nfunction createPromise(position, delay) {\n  return new Promise ((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n  if (shouldResolve) {\n    resolve({position, delay});\n  } else {\n    reject({position, delay});\n  }\n    }, delay);\n  });\n  \n}\n\nconst onSubmitForm = (event) => {\n  event.preventDefault();\n\n  if(!event.target.tagName === 'BUTON') {\n    return;\n  }\n\n  const {\n    elements: {delay, step, amount},\n  } = event.currentTarget;\n\n  firstDaleyInput = Number(delay.value);\n  daleyStepInput = Number(step.value);\n  amountInput = Number(amount.value);\n\n  if (firstDaleyInput < 0 || daleyStepInput < 0 || amountInput <= 0) {\n    Notify.failure(`❌ Please input correct values!`);\n    return;\n  }\n\n  for (let i = 1; i < amountInput; i++) {\n    createPromise(i, firstDaleyInput)\n    .then(({ position, delay }) => {\n      Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({ position, delay }) => {\n      Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n\n     firstDaleyInput += daleyStepInput; \n    }\n\n    event.currentTarget.reset();\n\n};\n\nform.addEventListener('submit', onSubmitForm);"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$firstDaleyInput","$ce04d3a99e08e73b$var$daleyStepInput","$ce04d3a99e08e73b$var$amountInput","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","addEventListener","event","preventDefault","target","tagName","_elements","currentTarget","elements","delay1","step","amount","Number","value","Notify","failure","i","then","param","success","concat","catch","reset"],"version":3,"file":"03-promises.124bd07d.js.map"}